{"version":3,"sources":["components/form/form.styled.js","components/form/form.js","components/filter/filter.styled.js","components/filter/filter.js","components/contactList/contacts.styled.js","components/contactList/contactList.js","components/App.js","index.js"],"names":["ContactForm","styled","form","Label","label","Tel","input","Name","Btn","button","Form","state","name","number","hanldeChange","e","currentTarget","value","setState","setForm","preventDefault","contact","id","uuidv4","props","onSubmit","resetForm","this","htmlFor","type","onChange","pattern","title","required","Component","Input","Wrapper","div","Filter","defaultProps","Insert","p","Text","span","Button","Link","a","ContactList","contactsList","onRemove","map","href","onClick","App","contacts","filter","addContact","foundName","find","el","foundNumber","alert","handleChange","handleRemove","prevState","filterRegister","toLowerCase","filteredContacts","includes","style","textAlign","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.151a8797.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const ContactForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n  margin: 10px 0;\n`;\nexport const Label = styled.label`\n  margin-bottom: 20px;\n`;\n\nexport const Tel = styled.input`\n  margin-left: 20px;\n  background: yellow;\n`;\n\nexport const Name = styled.input`\n  margin-left: 50px;\n  background: yellow;\n`;\n\nexport const Btn = styled.button`\n  width: 150px;\n  padding: 5px;\n  font-size: 15px;\n  background: yellow;\n  border-radius: 5px;\n  border-color: green;\n  font-weight: bold;\n`;\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport PropTypes from \"prop-types\";\nimport { ContactForm, Label, Tel, Name, Btn } from \"./form.styled\";\n\nexport default class Form extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  hanldeChange = (e) => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  setForm = (e) => {\n    e.preventDefault();\n\n    const contact = {\n      id: uuidv4(),\n      name: this.state.name,\n      number: this.state.number,\n    };\n\n    this.props.onSubmit(contact);\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({\n      id: \"\",\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  render() {\n    return (\n      <ContactForm onSubmit={this.setForm}>\n        <Label htmlFor=\"name\">\n          {\" \"}\n          Name\n          <Name\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.hanldeChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например drian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </Label>\n        <Label htmlFor=\"number\">\n          Telephone\n          <Tel\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.hanldeChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </Label>\n        <Btn type=\"submit\">Add contact</Btn>\n      </ContactForm>\n    );\n  }\n}\n","import styled from \"@emotion/styled\";\n\nexport const Label = styled.label`\n  font-size: 20px;\n  color: #265301;\n`;\n\nexport const Input = styled.input`\n  margin-left: 20px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Wrapper, Label, Input } from \"./filter.styled\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <Wrapper>\n      <Label Label>\n        Find contacts by name\n        <Input\n          type=\"text\"\n          name=\"filter\"\n          value={value}\n          onChange={onChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </Label>\n    </Wrapper>\n  );\n};\n\nFilter.defaultProps = {\n  value: \"\",\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import styled from \"@emotion/styled\";\n\nexport const Insert = styled.p`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Text = styled.span`\n  margin-right: 10px;\n`;\n\nexport const Button = styled.button`\n  width: 150px;\n  padding: 5px;\n  font-size: 15px;\n  background: yellow;\n  border-radius: 5px;\n  border-color: green;\n  font-weight: bold;\n`;\n\nexport const Link = styled.a`\n  text-decoration: none;\n  margin-right: 10px;\n  color: #265301;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Insert, Text, Button, Link } from \"./contacts.styled\";\n\nconst ContactList = ({ contactsList, onRemove }) => {\n  return contactsList.map((contact) => (\n    <Insert key={contact.id}>\n      <Text>{contact.name}:</Text>\n      <Link href={`tel:${contact.number}`}>{contact.number}</Link>\n      <Button type=\"button\" onClick={() => onRemove(contact.id)}>\n        Delete\n      </Button>\n    </Insert>\n  ));\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onRemove: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import \"./App.css\";\nimport Form from \"./form/index\";\nimport Filter from \"./filter/index\";\nimport ContactList from \"./contactList/index\";\nimport React, { Component } from \"react\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContact = (contact) => {\n    const foundName = this.state.contacts.find(\n      (el) => el.name === contact.name\n    );\n    const foundNumber = this.state.contacts.find(\n      (el) => el.number === contact.number\n    );\n\n    if (foundName) {\n      alert(`${contact.name} is already on contacts`);\n      return;\n    } else if (foundNumber) {\n      alert(`${contact.number} is already on contacts`);\n      return;\n    } else {\n      this.setState(({ contacts }) => ({\n        contacts: [...contacts, contact],\n      }));\n    }\n  };\n\n  handleChange = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  handleRemove = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((el) => el.id !== id),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filterRegister = this.state.filter.toLowerCase();\n    const filteredContacts = this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filterRegister)\n    );\n    return (\n      <>\n        <h1 style={{ textAlign: \"center\" }}>Phonebook</h1>\n        <Form onSubmit={this.addContact} />\n        <h2 style={{ textAlign: \"center\" }}>Contacts</h2>\n        <Filter value={filter} onChange={this.handleChange} />\n        <ContactList\n          contactsList={filteredContacts}\n          onRemove={this.handleRemove}\n        />\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}